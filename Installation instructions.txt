matplotlib      # for all the plotting
numpy           # for matrix handling
torch           # for using the models
cartopy         # for ploting with a background map and in a coordinate system (optional)
pandas          # for the metrics
pyart           # for reading NEXRAD data
skimage         # for numpy version of the SSIM
scipy           # for doing correlations in images
IPython         # to clear the output after each epoch of the training (optional)

keras           # for the baseline comparison with RainNet; data_generator.py uses as it admits pytorch or keras, but it's optional
tensorflow      # for the baseline comparison with RainNet; data_generator.py uses as it admits pytorch or keras, but it's optional
pysteps         # for the baseline comparison with PySteps models

hyperopt        # for the examples for parameter optimization
nexradaws       # for the examples for downloading NEXRAD data
sh              # for the examples
PIL             # for the examples
imageio         # for the examples
cv2             # for the examples
sklearn         # for the examples


INSTRUCTIONS

conda config --append channels conda-forge
conda install numpy
if GPU: conda install pytorch torchvision cudatoolkit=10.1 -c pytorch (with the proper cuda version)
if CPU: conda install pytorch-cpu torchvision-cpu -c pytorch
pip install .
# at this point you should be able to run prediction, like in "examples/How to make predictions"

# the following packages will allow you to use every functionality, if you don't want to go for all read above what each package is used for.
pip install nexradaws
conda install cartopy arm_pyart IPython pysteps hyperopt sh pillow imageio opencv scikit-learn
if GPU: conda install tensorflow-gpu keras
if CPU: conda install tensorflow keras  



